async function showTasks(e,t,a){let o=await getCollaborators(),n=await getAssign();const r=document.querySelector("#tasks-list");if(r.innerHTML="",0===e.length){const e=document.createElement("P");return e.textContent="¡Es hora de dar un paso adelante en tu proyecto! Agrega nuevas tareas para alcanzar tus objetivos. ¡Cada tarea te acerca un paso más hacia el éxito! Haz clic en el botón de abajo para empezar a añadir tareas ahora mismo.",e.classList.add("no-tasks"),void r.appendChild(e)}const i=e.map(i=>taskBin(e,i,n,o,r,t,a));Promise.all(i).then(()=>{showContentTask(),taskActionsMenu()})}function newTaskModal(e,t,a){const o=document.querySelector("#taskModal");o.style.display="flex";const n=document.querySelector("#addTaskBtn");n.textContent="Enviar",document.querySelector("#modalLegend").textContent="Nueva tarea",cleanForm();o.querySelector("#taskDeadline").max=a.deadline;const r=async function(e){e.preventDefault();let o=[];const i=document.querySelector("#taskTitle").value.trim();if(""===i)return void showAlert("El nombre es obligatorio","error");if(o={title:i,description:document.querySelector("#taskDescription").value.trim(),deadline:document.querySelector("#taskDeadline").value.trim(),priority:document.querySelector("#taskPriority").value.trim()||"0",status:document.querySelector("#taskStatus").value.trim(),project_id:a.id},await addTask(o)){let e=await getTasks();generalView&&(showTasks(e,t,a),showCalendar(e,t,a)),kanbanView&&showTasksKanban()}n.removeEventListener("click",r)};n.addEventListener("click",r)}function editTaskModal(e,t,a,o){document.querySelector("#taskModal").style.display="flex";const n=document.querySelector("#addTaskBtn");n.textContent="Actualizar tarea",document.querySelector("#modalLegend").textContent="Editar tarea",cleanForm();let r=document.querySelector("#taskTitle");r.value=t.title;let i=document.querySelector("#taskDescription");i.value=t.description;let s=document.querySelector("#taskDeadline");s.value=t.deadline,s.max=o.deadline;let l=document.querySelector("#taskPriority");l.value=t.priority;let c=document.querySelector("#taskStatus").value=t.status;a.id!==o.user_id&&(r.setAttribute("readonly",!0),i.setAttribute("readonly",!0),s.setAttribute("readonly",!0),l.disabled=!0);const d=async function(e){if(e.preventDefault(),r=document.querySelector("#taskTitle").value.trim(),""!==r){if(i=document.querySelector("#taskDescription").value.trim(),s=document.querySelector("#taskDeadline").value.trim(),l=document.querySelector("#taskPriority").value.trim(),c=document.querySelector("#taskStatus").value.trim(),t={id:t.id,project_id:t.project_id,status:c,title:r,description:i,deadline:s,priority:l},await updateTask(t)){let e=await getTasks();generalView&&(showTasks(e,a,o),showCalendar(e,a,o)),kanbanView&&showTasksKanban()}n.removeEventListener("click",d)}else showAlert("El nombre es obligatorio","error")};n.addEventListener("click",d)}function cleanForm(){document.querySelector("#taskTitle").value="",document.querySelector("#taskDescription").value="",document.querySelector("#taskDeadline").value="",document.querySelector("#taskPriority").value=""}async function addTask(e){const t=new FormData;t.append("title",e.title),t.append("description",e.description),t.append("deadline",e.deadline),t.append("priority",e.priority),t.append("status",e.status),t.append("url",getUrlProject());try{const e=location.origin+"/api/task",a=await fetch(e,{method:"POST",body:t}),o=await a.json();if("exito"===o.type){return document.querySelector("#taskModal").style.display="none",infoAction.fire({icon:"success",title:o.message}),!0}}catch(e){return infoAction.fire({icon:"error",title:"No se ha podido añadir la tarea"}),console.log(e),!1}}async function updateTask(e){const t=new FormData;t.append("id",e.id),t.append("project_id",e.project_id),t.append("status",e.status),t.append("title",e.title),t.append("description",e.description),t.append("deadline",e.deadline),t.append("priority",e.priority),t.append("url",getUrlProject());try{const e=location.origin+"/api/task/update",a=await fetch(e,{method:"POST",body:t}),o=await a.json();if("exito"===o.type){return document.querySelector("#taskModal").style.display="none",infoAction.fire({icon:"success",title:o.message}),!0}}catch(e){return infoAction.fire({icon:"error",title:"No se ha podido actualizar la tarea"}),console.log(e),!1}}async function deleteTask(e){const t=new FormData;t.append("id",e.id),t.append("url",getUrlProject());try{const e=location.origin+"/api/task/delete",a=await fetch(e,{method:"POST",body:t}),o=await a.json();if("exito"===o.type){return document.querySelector("#taskModal").style.display="none",infoAction.fire({icon:"success",title:o.message}),!0}}catch(e){return infoAction.fire({icon:"error",title:"No se ha podido eliminar la tarea"}),console.log(e),!1}}