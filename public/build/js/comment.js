async function addComment(e){const t=new FormData;t.append("task_id",e.task_id),t.append("user_id",comcomment.user_id),t.append("text",comcomment.text),t.append("url",getUrlProject());try{const e="http://localhost:3000/api/comment/create",o=await fetch(e,{method:"POST",body:t}),a=await o.json();if("exito"===a.type){document.querySelector("#taskModal").style.display="none",infoAction.fire({icon:"success",title:a.message}),generalView&&(showTasks(),showCalendar()),kanbanView&&showTasksKanban()}}catch(e){infoAction.fire({icon:"error",title:"No se ha podido a√±adir la tarea"}),console.log(e)}}async function updateComment(e){const t=new FormData;t.append("id",e.id),t.append("task_id",e.task_id),t.append("user_id",e.user_id),t.append("text",e.text),t.append("url",getUrlProject());try{const e="http://localhost:3000/api/comment/update",o=await fetch(e,{method:"POST",body:t}),a=await o.json();if("exito"===a.type){document.querySelector("#taskModal").style.display="none",infoAction.fire({icon:"success",title:a.message})}}catch(e){infoAction.fire({icon:"error",title:"No se ha podido actualizar el comentario"}),console.log(e)}}async function deleteComment(e){const t=new FormData;t.append("id",e.id),t.append("url",getUrlProject());try{const e="http://localhost:3000/api/comment/delete",o=await fetch(e,{method:"POST",body:t}),a=await o.json();"exito"===a.type&&infoAction.fire({icon:"success",title:a.message})}catch(e){infoAction.fire({icon:"error",title:"No se ha podido eliminar la tarea"}),console.log(e)}}